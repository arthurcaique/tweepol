/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import abreviaturas.AbreviaturasView;
import treino.control.ControladorDefineTreinoView;
import amostra.control.ControladorRotulagemView;
import amostra.control.ControladorSelecionaAmostraView;
import captura.view.FiltroStreamTweetsView;
import java.awt.Frame;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import pre_processamento.control.ControladorPreProcessamentoView;
import tweet.Tweet;
import utilitarios.ClasseUtilitaria;
import exceptions.DadoInvalidoException;
import exceptions.ErroInternoException;
import suporte.view.ParticionarArquivoView;
import suporte.view.UnirArquivosView;
import utilitarios.ArquivoUtils;

/**
 *
 * @author Arthur
 */
public class MenuPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form MenuPrincipal
     */
    public MenuPrincipal() {
        initComponents();
        setExtendedState(Frame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        jPDesk = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMICapturar = new javax.swing.JMenu();
        jMIPreProcessar = new javax.swing.JMenu();
        jMICapturar1 = new javax.swing.JMenu();
        jMIRotularAmostra = new javax.swing.JMenuItem();
        jMISelecionarAmostra = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        hMUtilitarios = new javax.swing.JMenu();
        jMIAbvs = new javax.swing.JMenuItem();
        jMIPartArq = new javax.swing.JMenuItem();
        jMIUnirArquivos = new javax.swing.JMenuItem();

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPDeskLayout = new javax.swing.GroupLayout(jPDesk);
        jPDesk.setLayout(jPDeskLayout);
        jPDeskLayout.setHorizontalGroup(
            jPDeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 797, Short.MAX_VALUE)
        );
        jPDeskLayout.setVerticalGroup(
            jPDeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 445, Short.MAX_VALUE)
        );

        jMenuBar1.setFont(new java.awt.Font("Malgun Gothic", 1, 18)); // NOI18N
        jMenuBar1.setPreferredSize(new java.awt.Dimension(84, 40));

        jMICapturar.setText("Capturar tweets");
        jMICapturar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jMICapturar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMICapturarMouseClicked(evt);
            }
        });
        jMICapturar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICapturarActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMICapturar);

        jMIPreProcessar.setText("Pré-Processar");
        jMIPreProcessar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jMIPreProcessar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMIPreProcessarMouseClicked(evt);
            }
        });
        jMIPreProcessar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIPreProcessarActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMIPreProcessar);

        jMICapturar1.setText("Treinar/Testar");
        jMICapturar1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jMICapturar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICapturar1ActionPerformed(evt);
            }
        });

        jMIRotularAmostra.setText("Rotular amostra");
        jMIRotularAmostra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIRotularAmostraActionPerformed(evt);
            }
        });
        jMICapturar1.add(jMIRotularAmostra);

        jMISelecionarAmostra.setText("Treinar Classificador");
        jMISelecionarAmostra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMISelecionarAmostraActionPerformed(evt);
            }
        });
        jMICapturar1.add(jMISelecionarAmostra);

        jMenuItem1.setText("Testar Classificador");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMICapturar1.add(jMenuItem1);

        jMenuBar1.add(jMICapturar1);

        jMenu1.setText("Análise de Sentimento");
        jMenu1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        hMUtilitarios.setText("Suporte");
        hMUtilitarios.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jMIAbvs.setText("Abreviaturas");
        jMIAbvs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIAbvsActionPerformed(evt);
            }
        });
        hMUtilitarios.add(jMIAbvs);

        jMIPartArq.setText("Particionar arquivo");
        jMIPartArq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIPartArqActionPerformed(evt);
            }
        });
        hMUtilitarios.add(jMIPartArq);

        jMIUnirArquivos.setText("Unir arquivos");
        jMIUnirArquivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIUnirArquivosActionPerformed(evt);
            }
        });
        hMUtilitarios.add(jMIUnirArquivos);

        jMenuBar1.add(hMUtilitarios);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPDesk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPDesk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMICapturarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICapturarActionPerformed
        try {
            FiltroStreamTweetsView capturadorView = new FiltroStreamTweetsView(null, true);
            ClasseUtilitaria.abrirView(capturadorView, null);
        } catch (ErroInternoException ex) {
            ex.exibirMensagemAoUsuario(ex);
        }
    }//GEN-LAST:event_jMICapturarActionPerformed

    private void jMICapturarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMICapturarMouseClicked
        try {
            FiltroStreamTweetsView capturadorView = new FiltroStreamTweetsView(null, true);
            ClasseUtilitaria.abrirView(capturadorView, null);
        } catch (ErroInternoException ex) {
            ex.exibirMensagemAoUsuario(ex);
        }
    }//GEN-LAST:event_jMICapturarMouseClicked

    private void jMISelecionarAmostraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMISelecionarAmostraActionPerformed
        try {
            ArrayList<Tweet> tweetsSelecionados = ControladorSelecionaAmostraView.recuperarTweetsArquivo();
            ControladorDefineTreinoView.abrirTelaTreino(tweetsSelecionados);
        } catch (ErroInternoException ex) {
            ex.exibirMensagemAoUsuario(ex);
        } catch (DadoInvalidoException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Aviso", JOptionPane.WARNING_MESSAGE);
        } catch (ArquivoUtils.ArquivoNaoSelecionadoException ex) {
            System.err.println(ex.getMessage());
        }
    }//GEN-LAST:event_jMISelecionarAmostraActionPerformed

    private void jMIRotularAmostraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIRotularAmostraActionPerformed
        try {
            ControladorRotulagemView.selecionarAmostraEIrParaTelaRotulacao();
        } catch (DadoInvalidoException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Aviso", JOptionPane.WARNING_MESSAGE);
        } catch (ErroInternoException ex) {
            ex.exibirMensagemAoUsuario(ex);
        } catch (ArquivoUtils.ArquivoNaoSelecionadoException ex) {
            System.err.println(ex.getMessage());
        }
    }//GEN-LAST:event_jMIRotularAmostraActionPerformed

    private void jMIPreProcessarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIPreProcessarActionPerformed
        abrirPreProcessamento();
    }//GEN-LAST:event_jMIPreProcessarActionPerformed

    private void jMIPreProcessarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMIPreProcessarMouseClicked
        abrirPreProcessamento();
    }//GEN-LAST:event_jMIPreProcessarMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            ControladorDefineTreinoView.testarModelo();
        } catch (ErroInternoException ex) {
            ex.exibirMensagemAoUsuario(ex);
        } catch (ArquivoUtils.ArquivoNaoSelecionadoException ex) {
            System.err.println(ex.getMessage());
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        try {
            ASView asview = new ASView(null, true);
            ClasseUtilitaria.abrirView(asview, null);
        } catch (ErroInternoException ex) {
            ex.exibirMensagemAoUsuario(ex);
        }
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        try {
            ASView asview = new ASView(null, true);
            ClasseUtilitaria.abrirView(asview, null);
        } catch (ErroInternoException ex) {
            ex.exibirMensagemAoUsuario(ex);
        }
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMICapturar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICapturar1ActionPerformed

    }//GEN-LAST:event_jMICapturar1ActionPerformed

    private void jMIPartArqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIPartArqActionPerformed
        try {
            ParticionarArquivoView partView = new ParticionarArquivoView(null, true);
            File arq = ArquivoUtils.selecionarArquivo();
            ArrayList<Tweet> tweets = Fachada.getINSTANCIA().recuperarTweets(arq);
            partView.abrirArquivoTweets(tweets);
            ClasseUtilitaria.abrirView(partView, null);
        } catch (ErroInternoException ex) {
            ex.exibirMensagemAoUsuario(ex);
        } catch (DadoInvalidoException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Aviso do sistema", JOptionPane.WARNING_MESSAGE);
        } catch (ArquivoUtils.ArquivoNaoSelecionadoException ex) {
            System.err.println(ex.getMessage());
        }
    }//GEN-LAST:event_jMIPartArqActionPerformed

    private void jMIUnirArquivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIUnirArquivosActionPerformed
        try {
            UnirArquivosView unir = new UnirArquivosView(null, true);
            ClasseUtilitaria.abrirView(unir, null);
        } catch (ErroInternoException ex) {
            ex.exibirMensagemAoUsuario(ex);
        }
    }//GEN-LAST:event_jMIUnirArquivosActionPerformed

    private void jMIAbvsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIAbvsActionPerformed
        try {
            abreviaturas.AbreviaturasView abv = new AbreviaturasView(null, true);
            ClasseUtilitaria.abrirView(abv, null);
        } catch (ErroInternoException ex) {
            ex.exibirMensagemAoUsuario(ex);
        }
    }//GEN-LAST:event_jMIAbvsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MenuPrincipal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu hMUtilitarios;
    private javax.swing.JMenuItem jMIAbvs;
    private javax.swing.JMenu jMICapturar;
    private javax.swing.JMenu jMICapturar1;
    private javax.swing.JMenuItem jMIPartArq;
    private javax.swing.JMenu jMIPreProcessar;
    private javax.swing.JMenuItem jMIRotularAmostra;
    private javax.swing.JMenuItem jMISelecionarAmostra;
    private javax.swing.JMenuItem jMIUnirArquivos;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPDesk;
    // End of variables declaration//GEN-END:variables

    private void abrirPreProcessamento() {
        try {
            ControladorPreProcessamentoView.abrirPreProcessamento();
        } catch (ErroInternoException ex) {
            ex.exibirMensagemAoUsuario(ex);
        } catch (ArquivoUtils.ArquivoNaoSelecionadoException ex) {
            System.err.println(ex.getMessage());
        }
    }

}
