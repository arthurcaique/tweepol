/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package amostra.view;

import amostra.TableModelRotulacaoTweets;
import amostra.control.ControladorRotulagemAmostra;
import amostra.control.ControladorRotulagemView;
import com.sun.glass.events.KeyEvent;
import exceptions.DadoInvalidoException;
import java.util.ArrayList;
import javax.swing.JTable;
import tweet.Tweet;
import exceptions.ErroInternoException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.io.File;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.event.TableModelEvent;
import main.Fachada;
import utilitarios.ArquivoUtils;

/**
 *
 * @author Arthur Caique
 */
public class RotularAmostraTweets extends javax.swing.JDialog {

    private TableModelRotulacaoTweets tableModel;
    private File arq;

    /**
     * Creates new form LeitorView
     *
     * @param parent
     * @param modal
     */
    public RotularAmostraTweets(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTableModel(jTTweets);
        tableModel.addTableModelListener((TableModelEvent e) -> {
            jLTweets2.setText(tableModel.getTweets().size() + " tweets");
            jLNegativos.setText(tableModel.getNegativos() + " negativos");
            jlPositivos.setText(tableModel.getPositivos() + " positivos");
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTTweets = new javax.swing.JTable();
        jBRotular = new javax.swing.JButton();
        jBSair = new javax.swing.JButton();
        jLNegativos = new javax.swing.JLabel();
        jlPositivos = new javax.swing.JLabel();
        jLTweets2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Rotulação de Tweets");

        jTTweets.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTTweets.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTTweetsMouseClicked(evt);
            }
        });
        jTTweets.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTTweetsKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTTweets);

        jBRotular.setText("Rotular");
        jBRotular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRotularActionPerformed(evt);
            }
        });

        jBSair.setText("Cancelar");
        jBSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSairActionPerformed(evt);
            }
        });

        jLNegativos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLNegativos.setForeground(new java.awt.Color(51, 153, 255));
        jLNegativos.setText("negativos");

        jlPositivos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlPositivos.setForeground(new java.awt.Color(51, 153, 255));
        jlPositivos.setText("positivos");

        jLTweets2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLTweets2.setForeground(new java.awt.Color(51, 153, 255));
        jLTweets2.setText("tweets");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1256, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jBRotular)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBSair)
                        .addGap(368, 368, 368)
                        .addComponent(jLNegativos, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jlPositivos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLTweets2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBRotular, jBSair});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                .addGap(1, 1, 1)
                .addComponent(jlPositivos)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBRotular)
                    .addComponent(jBSair)
                    .addComponent(jLNegativos))
                .addGap(1, 1, 1)
                .addComponent(jLTweets2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBRotularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRotularActionPerformed
        try {
            if (!tableModel.getNaoPolarizados().isEmpty()) {
                int r = JOptionPane.showOptionDialog(null, "Deseja salvar os tweets não classificados?", "Pergunta", JOptionPane.OK_CANCEL_OPTION,
                        JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Sim", "Não"}, 0);
                if (r == 0) {
                    File arq = ArquivoUtils.abrirFileChooserSalvarArquivo(".txt");
                    ArrayList<Tweet> naoPolarizados = tableModel.getNaoPolarizados();
                    Fachada.getINSTANCIA().inserirTweets(arq, naoPolarizados);
                }
            }
            if (this.arq != null) {
                int r = JOptionPane.showOptionDialog(null, "Deseja atualizar o arquivo?", "Pergunta", JOptionPane.OK_CANCEL_OPTION,
                        JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Sim", "Não"}, 0);
                if (r == 0) {
                    ArrayList<Tweet> tweets = tableModel.getTweets();
                    Fachada.getINSTANCIA().atualizarPolaridadeTweets(arq, tweets);
                }
            }
            ArrayList<Tweet> tweetClassficado = ControladorRotulagemAmostra.ordenarMsgPorClassificacao(tableModel.getTweets());
            ControladorRotulagemView.irParaSelecaoConjuntoTreino(tweetClassficado);
        } catch (ErroInternoException ex) {
            ex.exibirMensagemAoUsuario(ex);
        } catch (ArquivoUtils.ArquivoNaoSalvoException | DadoInvalidoException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jBRotularActionPerformed

    private void jBSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBSairActionPerformed

    private void jTTweetsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTTweetsMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON3) {
            int linhaSelecionada = jTTweets.getSelectedRow();
            if (linhaSelecionada > -1) {
                JPopupMenu popUp = new JPopupMenu("Menu");
                JMenuItem itemMenuQuitar = new JMenuItem("Deseja tirar o rótulo?");
                JMenuItem excluir = new JMenuItem("Excluir");
                itemMenuQuitar.addActionListener((ActionEvent e) -> {
                    Tweet tweet = tableModel.getTweet(jTTweets.getSelectedRow());
                    tweet.setPolaridade(Tweet.Polaridade.NAO_INFORMADA);
                    tableModel.fireTableDataChanged();
                });
                excluir.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        deletar();
                    }
                });
                popUp.add(itemMenuQuitar);
                popUp.add(excluir);
                popUp.setVisible(true);
                popUp.show(jTTweets, evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_jTTweetsMouseClicked

    private void jTTweetsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTTweetsKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            deletar();
        }
    }//GEN-LAST:event_jTTweetsKeyPressed

    public void deletar() {
        tableModel.removeRow(jTTweets.getSelectedRow());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RotularAmostraTweets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RotularAmostraTweets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RotularAmostraTweets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RotularAmostraTweets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            RotularAmostraTweets dialog = new RotularAmostraTweets(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    public void irTelaRotulacao(ArrayList<Tweet> tweets) {
        jLNegativos.setText(tweets.size() + " " + jLNegativos.getText());
        tweets.stream().forEach((tweet) -> {
            tableModel.addRow(tweet);
        });
    }

    public void irTelaRotulacao(String diretorioArq, ArrayList<Tweet> tweets) {
        arq = new File(diretorioArq);
        jLNegativos.setText(tweets.size() + " " + jLNegativos.getText());
        tweets.stream().forEach((tweet) -> {
            tableModel.addRow(tweet);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBRotular;
    private javax.swing.JButton jBSair;
    private javax.swing.JLabel jLNegativos;
    private javax.swing.JLabel jLTweets2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTTweets;
    private javax.swing.JLabel jlPositivos;
    // End of variables declaration//GEN-END:variables

    private void setTableModel(JTable jTTweets) {
        tableModel = new TableModelRotulacaoTweets(jTTweets);
        jTTweets.setModel(tableModel);
        jTTweets.getColumnModel().getColumn(0).setPreferredWidth(200);
        jTTweets.getColumnModel().getColumn(1).setPreferredWidth(1300);
        jTTweets.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTTweets.getColumnModel().getColumn(3).setPreferredWidth(200);
    }

}
