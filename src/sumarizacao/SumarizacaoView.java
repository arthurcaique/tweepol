/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sumarizacao;

import exceptions.DadoInvalidoException;
import exceptions.ErroInternoException;
import grafico.BarChart;
import java.awt.Color;
import java.awt.Component;
import java.awt.FontMetrics;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.TableColumn;
import org.jfree.chart.ChartUtilities;
import org.jfree.ui.RefineryUtilities;
import tweet.Tweet;
import tweet.Tweet.Polaridade;
import utilitarios.ArquivoUtils;

/**
 *
 * @author Arthur Caique
 */
public class SumarizacaoView extends javax.swing.JFrame {

    private TableModel tm;

    /**
     * Creates new form SumarizacaoView
     *
     * @param parent
     * @param modal
     */
    public SumarizacaoView(java.awt.Frame parent, boolean modal) {
//        super(parent, modal);
        initComponents();

        this.tm = new TableModel(this.jTSuma);
        this.jTSuma.setModel(this.tm);
        this.jTSuma.setSelectionModel(new DefaultListSelectionModel() {
            @Override
            public String toString() {
                return "jTSuma";
            }
        });
        this.jTSuma.setAutoCreateColumnsFromModel(false);
        this.jTSuma.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        this.jTSuma.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        FontMetrics fm = this.jTSuma.getFontMetrics(this.jTSuma.getFont());
        this.jTSuma.setColumnModel(new ColumnModel(fm));
    }

    public void exibir(String arqDir, ArrayList<Tweet> tweets) throws ErroInternoException, DadoInvalidoException {
        int numFavor = 0;
        int numContra = 0;
        for (Tweet tweet : tweets) {
            if (tweet.getPolaridade() == Polaridade.POSITIVA) {
                numFavor++;
            } else if (tweet.getPolaridade() == Polaridade.NEGATIVA) {
                numContra++;
            }
            tm.addRow(tweet);
        }
        jLContra.setText(String.valueOf(numContra) + " tweets");
        jLFavor.setText(String.valueOf(numFavor) + " tweets");
        jLNum.setText(String.valueOf(tweets.size()) + " tweets");
        jLArquivo.setText(arqDir);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPSuma = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLArquivo = new javax.swing.JLabel();
        jLNum = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLFavor = new javax.swing.JLabel();
        jLContra = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTSuma = new javax.swing.JTable();
        jBSalvar = new org.jdesktop.swingx.JXButton();
        jBSair = new org.jdesktop.swingx.JXButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jXGrafico = new org.jdesktop.swingx.JXButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sumarização");

        jPSuma.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Arquivo:");

        jLArquivo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLArquivo.setForeground(new java.awt.Color(51, 51, 255));
        jLArquivo.setText("jLabel2");

        jLNum.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLNum.setForeground(new java.awt.Color(51, 51, 255));
        jLNum.setText("jLabel4");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 255));
        jLabel3.setText("Número de tweets:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 255));
        jLabel5.setText("A favor:");

        jLFavor.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLFavor.setForeground(new java.awt.Color(51, 51, 255));
        jLFavor.setText("jLabel6");

        jLContra.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLContra.setForeground(new java.awt.Color(51, 51, 255));
        jLContra.setText("jLabel8");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 255));
        jLabel7.setText("Contra:");

        jTSuma.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTSuma);

        jBSalvar.setBackground(new java.awt.Color(255, 255, 255));
        jBSalvar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jBSalvar.setText("Salvar");

        jBSair.setBackground(new java.awt.Color(255, 255, 255));
        jBSair.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jBSair.setText("Sair");
        jBSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSairActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Legenda"));

        jLabel2.setBackground(new java.awt.Color(51, 255, 255));
        jLabel2.setText("A favor");
        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel2.setOpaque(true);

        jLabel4.setBackground(java.awt.Color.orange);
        jLabel4.setText("Contra");
        jLabel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel4.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jXGrafico.setBackground(new java.awt.Color(255, 255, 255));
        jXGrafico.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jXGrafico.setText("Gráfico");
        jXGrafico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXGraficoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPSumaLayout = new javax.swing.GroupLayout(jPSuma);
        jPSuma.setLayout(jPSumaLayout);
        jPSumaLayout.setHorizontalGroup(
            jPSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1088, Short.MAX_VALUE)
            .addGroup(jPSumaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPSumaLayout.createSequentialGroup()
                        .addGroup(jPSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(2, 2, 2)
                        .addGroup(jPSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLArquivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLNum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPSumaLayout.createSequentialGroup()
                                .addGroup(jPSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLFavor, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLContra))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPSumaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jXGrafico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBSair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(277, 277, 277)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPSumaLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBSair, jBSalvar});

        jPSumaLayout.setVerticalGroup(
            jPSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPSumaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLArquivo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLFavor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLContra))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPSumaLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPSumaLayout.createSequentialGroup()
                        .addGroup(jPSumaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBSair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jXGrafico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPSuma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPSuma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBSairActionPerformed

    private void jXGraficoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXGraficoActionPerformed
        long positivo = 0;
        long negativo = 0;
        for (Tweet tweet : tm.getTweets()) {
            if (tweet.getPolaridade() == Tweet.Polaridade.POSITIVA) {
                positivo++;
            } else if (tweet.getPolaridade() == Tweet.Polaridade.NEGATIVA) {
                negativo++;
            }
        }
        BarChart demo = new BarChart("Visualização", "Polaridade", positivo, negativo);
        final JButton button = new JButton("Salvar gráfico");
        button.addActionListener((ActionEvent e) -> {
            try {
                File file = ArquivoUtils.abrirFileChooserSalvarArquivo(".png");
                ChartUtilities.saveChartAsJPEG(file, demo.chart, 640, 640);
            } catch (ArquivoUtils.ArquivoNaoSalvoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (IOException ex) {
                new ErroInternoException().exibirMensagemAoUsuario(ex);
            }
        });
        button.setVisible(true);
        demo.setSize(800, 800);
        demo.add(button);
        demo.pack();
        RefineryUtilities.centerFrameOnScreen(demo);
        demo.setVisible(true);
        demo.setLocationRelativeTo(null);
    }//GEN-LAST:event_jXGraficoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SumarizacaoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SumarizacaoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SumarizacaoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SumarizacaoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            SumarizacaoView dialog = new SumarizacaoView(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXButton jBSair;
    private org.jdesktop.swingx.JXButton jBSalvar;
    private javax.swing.JLabel jLArquivo;
    private javax.swing.JLabel jLContra;
    private javax.swing.JLabel jLFavor;
    private javax.swing.JLabel jLNum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPSuma;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTSuma;
    private org.jdesktop.swingx.JXButton jXGrafico;
    // End of variables declaration//GEN-END:variables

    public class TableModel extends utilitarios.ModeloDeTabelaAbstrato {

        private final String[] colunas = new String[]{"Polaridade, Texto"};

        private static final int TEXTO = 1;
        private static final int POL = 0;

        public TableModel(JTable tabela) {
            super(tabela);
        }

        @Override
        public int getColumnCount() {
            return this.colunas.length;
        }

        @Override
        public String getColumnName(int coluna) {
            return this.colunas[coluna];
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Tweet tweet = (Tweet) this.lista.get(rowIndex);
            switch (columnIndex) {
                case TEXTO:
                    return tweet.getTextoSemStemm();
                case POL:
                    return tweet.getPolaridade();
                default:
                    throw new IndexOutOfBoundsException();
            }
        }

        public ArrayList<Tweet> getTweets() {
            return this.lista;
        }

    }

    public class ColumnModel extends DefaultTableColumnModel {

        public ColumnModel(FontMetrics fm) {
            addColumn(criaColuna(0, 80, fm, false, "Polaridade"));
            addColumn(criaColuna(1, 1008, fm, false, "Texto"));
        }

        private TableColumn criaColuna(int columnIndex, int largura, FontMetrics fm, boolean resizable, String titulo) {
            int larguraTitulo = fm.stringWidth(titulo + "  ");
            if (largura < larguraTitulo) {
                largura = larguraTitulo;
            }

            TableColumn col = new TableColumn(columnIndex);
            col.setCellRenderer(new CellRenderer());
            col.setHeaderRenderer(null);
            col.setHeaderValue(titulo);
            col.setPreferredWidth(largura);
            if (!resizable) {
                col.setMaxWidth(largura);
                col.setMinWidth(largura);
            }
            col.setResizable(resizable);
            return col;
        }
    }

    public class CellRenderer extends DefaultTableCellRenderer {

        public CellRenderer() {
            super();
        }

        @Override
        public Component getTableCellRendererComponent(javax.swing.JTable table,
                Object value, boolean isSelected, boolean hasFocus, int row, int column) {

            JLabel label = (JLabel) super.getTableCellRendererComponent(
                    table, value, isSelected, hasFocus, row, column);

            Color corFavor = new Color(51, 255, 255);
            Color corContra = Color.orange;
            Color corNeutra = Color.WHITE;

            label.setFont(new java.awt.Font("Tahoma", 0, 12));

            Polaridade pol = (Polaridade) table.getValueAt(row, 0);
            if (pol == Polaridade.NAO_INFORMADA) {
                label.setBackground(corNeutra);
            } else if (pol == Polaridade.POSITIVA) {
                label.setBackground(corFavor);
            } else {
                label.setBackground(corContra);
            }

            if (isSelected) {
                label.setBackground(Color.BLACK);
            }

            if (column == 0) {
                label.setHorizontalAlignment(LEFT);
            } else if (column == 1) {
                label.setHorizontalAlignment(LEFT);
            }

            return label;
        }
    }

}
