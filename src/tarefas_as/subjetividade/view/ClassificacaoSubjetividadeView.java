/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tarefas_as.subjetividade.view;

import java.io.File;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import tweet.Tweet;
import exceptions.ErroInternoException;
import javax.swing.event.TableModelEvent;
import main.Fachada;
import utilitarios.ArquivoUtils;

/**
 *
 * @author Arthur Caique
 */
public class ClassificacaoSubjetividadeView extends javax.swing.JDialog {

    private TableModel tableModel;

    /**
     * Creates new form SubjectividadeView
     *
     * @param parent
     * @param modal
     */
    public ClassificacaoSubjetividadeView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setarTableModel();
        tableModel.addTableModelListener((TableModelEvent e) -> {
            jLNumTweet.setText(tableModel.getTweets().size() + " tweets");
            jLTweetsSub.setText(tableModel.numTweetSub() + " opinativos");
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPSubject = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTSub = new javax.swing.JTable();
        jBClassificar = new org.jdesktop.swingx.JXButton();
        jCCancelar = new org.jdesktop.swingx.JXButton();
        jCBSelecionarTds = new javax.swing.JCheckBox();
        jLNumTweet = new javax.swing.JLabel();
        jLTweetsSub = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Classificação de Subjetividade");

        jPSubject.setBackground(new java.awt.Color(255, 255, 255));

        jTSub.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTSub);

        jBClassificar.setText("Classificar");
        jBClassificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBClassificarActionPerformed(evt);
            }
        });

        jCCancelar.setText("Cancelar");
        jCCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCCancelarActionPerformed(evt);
            }
        });

        jCBSelecionarTds.setBackground(new java.awt.Color(255, 255, 255));
        jCBSelecionarTds.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jCBSelecionarTds.setForeground(new java.awt.Color(51, 102, 255));
        jCBSelecionarTds.setText("Selecionar todos");
        jCBSelecionarTds.setFocusPainted(false);
        jCBSelecionarTds.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBSelecionarTdsItemStateChanged(evt);
            }
        });

        jLNumTweet.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLNumTweet.setForeground(new java.awt.Color(51, 102, 255));
        jLNumTweet.setText("jLabel1");

        jLTweetsSub.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLTweetsSub.setForeground(new java.awt.Color(51, 102, 255));
        jLTweetsSub.setText("jLabel2");

        javax.swing.GroupLayout jPSubjectLayout = new javax.swing.GroupLayout(jPSubject);
        jPSubject.setLayout(jPSubjectLayout);
        jPSubjectLayout.setHorizontalGroup(
            jPSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1049, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPSubjectLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPSubjectLayout.createSequentialGroup()
                        .addComponent(jLNumTweet)
                        .addGap(0, 0, 0))
                    .addGroup(jPSubjectLayout.createSequentialGroup()
                        .addComponent(jLTweetsSub)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBClassificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(322, 322, 322)))
                .addComponent(jCBSelecionarTds)
                .addContainerGap())
        );

        jPSubjectLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBClassificar, jCCancelar});

        jPSubjectLayout.setVerticalGroup(
            jPSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPSubjectLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                .addGroup(jPSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPSubjectLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jCBSelecionarTds))
                    .addGroup(jPSubjectLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPSubjectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBClassificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPSubjectLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLNumTweet)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLTweetsSub)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPSubject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jCCancelarActionPerformed

    private void jBClassificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBClassificarActionPerformed
        try {
            ArrayList<TableModel.TweetSubjetivo> ttSub = tableModel.getTweets();
            ArrayList<Tweet> tweets = new ArrayList<>();
            ttSub.stream().filter((tweet) -> (tweet.isSubjetivo())).forEach((tweet) -> {
                tweets.add(tweet.getTweet());
            });
            File arquivo = ArquivoUtils.abrirFileChooserSalvarArquivo(".txt");
            Fachada.getINSTANCIA().inserirTweets(arquivo, tweets);
            JOptionPane.showMessageDialog(null, "Classificação de subjetividade realizada com sucesso!", "Informação do sistema", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } catch (ErroInternoException ex) {
            ex.exibirMensagemAoUsuario(ex);
        } catch (ArquivoUtils.ArquivoNaoSalvoException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jBClassificarActionPerformed

    private void jCBSelecionarTdsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBSelecionarTdsItemStateChanged
        selecionarTodos(jCBSelecionarTds.isSelected());
    }//GEN-LAST:event_jCBSelecionarTdsItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClassificacaoSubjetividadeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClassificacaoSubjetividadeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClassificacaoSubjetividadeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClassificacaoSubjetividadeView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            ClassificacaoSubjetividadeView dialog = new ClassificacaoSubjetividadeView(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXButton jBClassificar;
    private javax.swing.JCheckBox jCBSelecionarTds;
    private org.jdesktop.swingx.JXButton jCCancelar;
    private javax.swing.JLabel jLNumTweet;
    private javax.swing.JLabel jLTweetsSub;
    private javax.swing.JPanel jPSubject;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTSub;
    // End of variables declaration//GEN-END:variables

    public void inserirTweets(ArrayList<Tweet> tweets) {
        tweets.stream().forEach((tweet) -> {
            boolean subjetivo = utilitarios.PostTaggerUtils.getINSTANCIA().temAdjetivo(tweet.getTextoSemStemm());
            tableModel.addRow(new TableModel(jTSub).new TweetSubjetivo(tweet, subjetivo));
        });
    }

    private void setarTableModel() {
        tableModel = new TableModel(jTSub);
        jTSub.setModel(tableModel);
        jTSub.getColumnModel().getColumn(0).setPreferredWidth(1000);
        jTSub.getColumnModel().getColumn(1).setPreferredWidth(100);
    }

    private void selecionarTodos(boolean b) {
        for (TableModel.TweetSubjetivo tweet : tableModel.getTweets()) {
            tweet.setSubjetivo(b);
        }
        tableModel.fireTableDataChanged();
    }

    public class TableModel extends utilitarios.ModeloDeTabelaAbstrato {

        private static final int TEXTO = 0;
        private static final int SUBJETIVO = 1;
        private final String[] colunas = new String[]{"Texto", "Tem opinião?"};

        public TableModel(JTable tabela) {
            super(tabela);
        }

        @Override
        public int getColumnCount() {
            return this.colunas.length;
        }

        @Override
        public String getColumnName(int row) {
            return this.colunas[row];
        }

        public int numTweetSub() {
            int num = 0;
            for (TweetSubjetivo tweet : (ArrayList<TweetSubjetivo>) this.lista) {
                if (tweet.isSubjetivo()) {
                    num++;
                }
            }
            return num;
        }

        @Override
        public Class getColumnClass(int columIndex) {
            switch (columIndex) {
                case SUBJETIVO:
                    return Boolean.class;
                default:
                    return String.class;
            }
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            TweetSubjetivo tSub = (TweetSubjetivo) this.lista.get(rowIndex);
            switch (columnIndex) {
                case TEXTO:
                    return tSub.getTweet().getTextoSemStemm();
                case SUBJETIVO:
                    return tSub.isSubjetivo();
                default:
                    throw new IndexOutOfBoundsException();
            }
        }

        @Override
        public void setValueAt(Object value, int row, int column) {
            TweetSubjetivo tuiSub = (TweetSubjetivo) this.lista.get(row);
            switch (column) {
                case SUBJETIVO:
                    tuiSub.setSubjetivo((Boolean) value);
                    break;
                default:
                    throw new IndexOutOfBoundsException();
            }
            fireTableDataChanged();
        }

        @Override
        public boolean isCellEditable(int row, int column) {
            return column == SUBJETIVO;
        }

        public TweetSubjetivo getTweetSubjetivo(int row) {
            return (TweetSubjetivo) this.lista.get(row);
        }

        public ArrayList<TweetSubjetivo> getTweets() {
            return this.lista;
        }

        public class TweetSubjetivo {

            private Tweet tweet;
            private boolean subjetivo;

            public TweetSubjetivo(Tweet tweet, boolean subjetivo) {
                this.tweet = tweet;
                this.subjetivo = subjetivo;
            }

            public Tweet getTweet() {
                return tweet;
            }

            public void setTweet(Tweet tweet) {
                this.tweet = tweet;
            }

            public boolean isSubjetivo() {
                return subjetivo;
            }

            public void setSubjetivo(boolean subjetivo) {
                this.subjetivo = subjetivo;
            }

        }

    }

}
