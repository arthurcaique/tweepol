/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import capturador.view.FiltroStreamTweetsView;
import java.awt.Frame;
import java.io.File;
import javax.swing.JOptionPane;
import pre_processamento.PreProcessamento;
import static utilitarios.Arquivo.selecionarArquivo;
import utilitarios.ClasseUtilitaria;
import utilitarios.exceptions.ErroInternoException;

/**
 *
 * @author W8
 */
public class MenuPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form MenuPrincipal
     */
    public MenuPrincipal() {
        initComponents();
        setExtendedState(Frame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPDesk = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMICapturar = new javax.swing.JMenu();
        jMIPreProcessar = new javax.swing.JMenu();
        jMICapturar1 = new javax.swing.JMenu();
        jMISelecionarAmostra = new javax.swing.JMenuItem();
        jMIRotularAmostra = new javax.swing.JMenuItem();
        jMIClassificar = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPDeskLayout = new javax.swing.GroupLayout(jPDesk);
        jPDesk.setLayout(jPDeskLayout);
        jPDeskLayout.setHorizontalGroup(
            jPDeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 797, Short.MAX_VALUE)
        );
        jPDeskLayout.setVerticalGroup(
            jPDeskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 445, Short.MAX_VALUE)
        );

        jMenuBar1.setFont(new java.awt.Font("Malgun Gothic", 1, 18)); // NOI18N
        jMenuBar1.setPreferredSize(new java.awt.Dimension(84, 40));

        jMICapturar.setText("Capturar tweets");
        jMICapturar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jMICapturar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMICapturarMouseClicked(evt);
            }
        });
        jMICapturar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMICapturarActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMICapturar);

        jMIPreProcessar.setText("Pré-Processar");
        jMIPreProcessar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jMIPreProcessar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMIPreProcessarMouseClicked(evt);
            }
        });
        jMIPreProcessar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIPreProcessarActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMIPreProcessar);

        jMICapturar1.setText("Amostra de Tweets");
        jMICapturar1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jMISelecionarAmostra.setText("Selecionar uma amostra");
        jMISelecionarAmostra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMISelecionarAmostraActionPerformed(evt);
            }
        });
        jMICapturar1.add(jMISelecionarAmostra);

        jMIRotularAmostra.setText("Rotular amostra");
        jMIRotularAmostra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIRotularAmostraActionPerformed(evt);
            }
        });
        jMICapturar1.add(jMIRotularAmostra);

        jMenuBar1.add(jMICapturar1);

        jMIClassificar.setText("Classificar Tweets");
        jMIClassificar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jMIClassificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMIClassificarMouseClicked(evt);
            }
        });
        jMIClassificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMIClassificarActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMIClassificar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPDesk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPDesk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMICapturarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMICapturarActionPerformed
        try {
            FiltroStreamTweetsView capturadorView = new FiltroStreamTweetsView(null, true);
            ClasseUtilitaria.abrirView(capturadorView, null);
        } catch (ErroInternoException ex) {
            ex.exibirMensagemAoUsuario(ex);
        }
    }//GEN-LAST:event_jMICapturarActionPerformed

    private void jMICapturarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMICapturarMouseClicked
        try {
            FiltroStreamTweetsView capturadorView = new FiltroStreamTweetsView(null, true);
            ClasseUtilitaria.abrirView(capturadorView, null);
        } catch (ErroInternoException ex) {
            ex.exibirMensagemAoUsuario(ex);
        }
    }//GEN-LAST:event_jMICapturarMouseClicked

    private void jMISelecionarAmostraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMISelecionarAmostraActionPerformed
        SelecaoAmostra.selecionarAmostra();
    }//GEN-LAST:event_jMISelecionarAmostraActionPerformed

    private void jMIRotularAmostraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIRotularAmostraActionPerformed
        RotulacaoAmostra.selecionarAmostraEIrParaTelaRotulacao();
    }//GEN-LAST:event_jMIRotularAmostraActionPerformed

    private void jMIClassificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIClassificarActionPerformed
    }//GEN-LAST:event_jMIClassificarActionPerformed

    private void jMIClassificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMIClassificarMouseClicked
        Object[] opcoes = new Object[]{"Escolher arquivo", "Formatar dados", "Cancelar"};
        int r = JOptionPane.showOptionDialog(null, "Escolha uma opção: ", "Opções", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null, opcoes, opcoes[0]);
        if (r == 0) {
        } else if (r == 1) {
            try {
                JOptionPane.showMessageDialog(null, "Escolha o arquivo com o conjunto de palavras da amostra rotulada!", "Informação", JOptionPane.INFORMATION_MESSAGE);
                File arquivoPalavras = selecionarArquivo();
                JOptionPane.showMessageDialog(null, "Escolha o arquivo com o conjunto de tweets a serem formatados para classificação!", "Informação", JOptionPane.INFORMATION_MESSAGE);
                File arquivoAFormatar = selecionarArquivo();
                formatar(arquivoPalavras, arquivoAFormatar);
            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
    }//GEN-LAST:event_jMIClassificarMouseClicked

    private void jMIPreProcessarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMIPreProcessarActionPerformed
        PreProcessamento.getINSTANCIA().abrirPreProcessamento();
    }//GEN-LAST:event_jMIPreProcessarActionPerformed

    private void jMIPreProcessarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMIPreProcessarMouseClicked
        PreProcessamento.getINSTANCIA().abrirPreProcessamento();
    }//GEN-LAST:event_jMIPreProcessarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MenuPrincipal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMICapturar;
    private javax.swing.JMenu jMICapturar1;
    private javax.swing.JMenu jMIClassificar;
    private javax.swing.JMenu jMIPreProcessar;
    private javax.swing.JMenuItem jMIRotularAmostra;
    private javax.swing.JMenuItem jMISelecionarAmostra;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPDesk;
    // End of variables declaration//GEN-END:variables

    private void formatar(File arquivoPalavras, File arquivoAFormatar) {

    }

}
