/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package suporte.view;

import exceptions.DadoInvalidoException;
import exceptions.ErroInternoException;
import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.JOptionPane;
import main.Fachada;
import tweet.Tweet;
import utilitarios.ArquivoUtils;

/**
 *
 * @author Arthur Caique
 */
public class ParticionarArquivoView extends javax.swing.JDialog {

    private ArrayList<Tweet> tweets;

    /**
     * Creates new form ParticionarArquivoView
     *
     * @param parent
     * @param modal
     */
    public ParticionarArquivoView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bGOpcoes = new javax.swing.ButtonGroup();
        jPPart = new javax.swing.JPanel();
        jPBotoes = new javax.swing.JPanel();
        jBPart = new org.jdesktop.swingx.JXButton();
        jBCancel = new org.jdesktop.swingx.JXButton();
        jPInfo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLNumTT = new javax.swing.JLabel();
        jTFTTArq = new javax.swing.JTextField();
        jLNumTweets = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jRBArq = new javax.swing.JRadioButton();
        jRBTT = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jCBEmbTweets = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Particionar Arquivos");

        jPPart.setBackground(new java.awt.Color(255, 255, 255));

        jPBotoes.setBackground(new java.awt.Color(255, 255, 255));

        jBPart.setBackground(new java.awt.Color(255, 255, 255));
        jBPart.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jBPart.setText("Particionar");
        jBPart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPartActionPerformed(evt);
            }
        });

        jBCancel.setBackground(new java.awt.Color(255, 255, 255));
        jBCancel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jBCancel.setText("Cancelar");
        jBCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPBotoesLayout = new javax.swing.GroupLayout(jPBotoes);
        jPBotoes.setLayout(jPBotoesLayout);
        jPBotoesLayout.setHorizontalGroup(
            jPBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBotoesLayout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(jBPart, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPBotoesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBCancel, jBPart});

        jPBotoesLayout.setVerticalGroup(
            jPBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBPart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPInfo.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 255));
        jLabel1.setText("Tweets por arquivo:");

        jLNumTT.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLNumTT.setForeground(new java.awt.Color(102, 102, 255));
        jLNumTT.setText("Número de Tweets:");

        jTFTTArq.setText("0");
        jTFTTArq.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFTTArqFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFTTArqFocusLost(evt);
            }
        });
        jTFTTArq.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFTTArqKeyTyped(evt);
            }
        });

        jLNumTweets.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLNumTweets.setForeground(new java.awt.Color(102, 102, 255));
        jLNumTweets.setText("jLabel2");

        javax.swing.GroupLayout jPInfoLayout = new javax.swing.GroupLayout(jPInfo);
        jPInfo.setLayout(jPInfoLayout);
        jPInfoLayout.setHorizontalGroup(
            jPInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPInfoLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(jPInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLNumTT)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTFTTArq)
                    .addComponent(jLNumTweets, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPInfoLayout.setVerticalGroup(
            jPInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLNumTT)
                    .addComponent(jLNumTweets))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTFTTArq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jRBArq.setBackground(new java.awt.Color(255, 255, 255));
        bGOpcoes.add(jRBArq);
        jRBArq.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jRBArq.setForeground(new java.awt.Color(102, 102, 255));
        jRBArq.setSelected(true);
        jRBArq.setText("Nº de Arquivos");
        jRBArq.setFocusPainted(false);

        jRBTT.setBackground(new java.awt.Color(255, 255, 255));
        bGOpcoes.add(jRBTT);
        jRBTT.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jRBTT.setForeground(new java.awt.Color(102, 102, 255));
        jRBTT.setText("Nº de Tweets");
        jRBTT.setFocusPainted(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 255));
        jLabel2.setText("Partição por:");

        jCBEmbTweets.setBackground(new java.awt.Color(255, 255, 255));
        jCBEmbTweets.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jCBEmbTweets.setForeground(new java.awt.Color(102, 102, 255));
        jCBEmbTweets.setText("Embaralhar tweets");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCBEmbTweets)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jRBArq)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRBTT)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBArq)
                    .addComponent(jRBTT)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jCBEmbTweets))
        );

        javax.swing.GroupLayout jPPartLayout = new javax.swing.GroupLayout(jPPart);
        jPPart.setLayout(jPPartLayout);
        jPPartLayout.setHorizontalGroup(
            jPPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPPartLayout.setVerticalGroup(
            jPPartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPPartLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPPart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPPart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFTTArqKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFTTArqKeyTyped
        String caracteres = "0123456789";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jTFTTArqKeyTyped

    private void jBCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBCancelActionPerformed

    private void jBPartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPartActionPerformed
        try {
            if (jRBArq.isSelected()) {
                particionarArquivoPorNumArq(this.tweets, Integer.valueOf(jTFTTArq.getText()));
            } else {
                particionarArquivoPorNumTweets(this.tweets, Integer.valueOf(jTFTTArq.getText()));
            }
            JOptionPane.showMessageDialog(null, "Arquivos particionados com sucesso!", "Êxito", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } catch (DadoInvalidoException | ArquivoUtils.ArquivoNaoSalvoException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (ErroInternoException ex) {
            ex.exibirMensagemAoUsuario(ex);
        }
    }//GEN-LAST:event_jBPartActionPerformed

    private void jTFTTArqFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFTTArqFocusLost
        if (jTFTTArq.getText().trim().isEmpty()) {
            jTFTTArq.setText("0");
        }
    }//GEN-LAST:event_jTFTTArqFocusLost

    private void jTFTTArqFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFTTArqFocusGained
        jTFTTArq.selectAll();
    }//GEN-LAST:event_jTFTTArqFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ParticionarArquivoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ParticionarArquivoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ParticionarArquivoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ParticionarArquivoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            ParticionarArquivoView dialog = new ParticionarArquivoView(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bGOpcoes;
    private org.jdesktop.swingx.JXButton jBCancel;
    private org.jdesktop.swingx.JXButton jBPart;
    private javax.swing.JCheckBox jCBEmbTweets;
    private javax.swing.JLabel jLNumTT;
    private javax.swing.JLabel jLNumTweets;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPBotoes;
    private javax.swing.JPanel jPInfo;
    private javax.swing.JPanel jPPart;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRBArq;
    private javax.swing.JRadioButton jRBTT;
    private javax.swing.JTextField jTFTTArq;
    // End of variables declaration//GEN-END:variables

    public void abrirArquivoTweets(ArrayList<tweet.Tweet> tweets) {
        jLNumTweets.setText(tweets.size() + "");
        this.tweets = tweets;
    }

    public void particionarArquivoPorNumTweets(ArrayList<Tweet> tweets, Integer ttPorArq) throws DadoInvalidoException, ArquivoUtils.ArquivoNaoSalvoException, ErroInternoException {
        if (ttPorArq == 0) {
            throw new DadoInvalidoException("Informe o número de tweets por arquivo!");
        } else if (ttPorArq >= tweets.size()) {
            throw new DadoInvalidoException("Para particionar o arquivo você deve informar um número menor que o do arquivo atual!");
        } else {
            if (jCBEmbTweets.isSelected()) {
                Collections.shuffle(tweets);
            }
            File arq = ArquivoUtils.abrirFileChooserSalvarArquivo(".txt");
            File arqTemp = arq;
            boolean primeiro = true;
            int tamListaTT = tweets.size();
            int indexLista = 0;
            int indexArq = 1;
            while (indexLista < tamListaTT) {
                if (!primeiro) {
                    indexArq++;
                    arq = new File(arqTemp.getPath().replaceAll(".txt", "") + indexArq + ".txt");
                }
                primeiro = false;
                List<Tweet> subList = tweets.subList(indexLista, indexLista + ttPorArq <= tamListaTT ? indexLista + ttPorArq : tamListaTT);
                if (indexLista + ttPorArq <= tamListaTT) {
                    indexLista = indexLista + ttPorArq;
                } else {
                    indexLista = tamListaTT;
                }
                ArrayList<Tweet> twees = new ArrayList<>(subList);
                Fachada.getINSTANCIA().inserirTweets(arq, twees);
            }
        }
    }

    public void particionarArquivoPorNumArq(ArrayList<Tweet> tweets, Integer numArq) throws DadoInvalidoException, ArquivoUtils.ArquivoNaoSalvoException, ErroInternoException {
        if (numArq == 0) {
            throw new DadoInvalidoException("Informe o número de arquivos!");
        } else if (numArq >= tweets.size()) {
            throw new DadoInvalidoException("Informe um número menor ou igual ao número de tweets");
        } else {
            if (jCBEmbTweets.isSelected()) {
                Collections.shuffle(tweets);
            }
            File arq = ArquivoUtils.abrirFileChooserSalvarArquivo(".txt");
            File arqTemp = arq;
            boolean primeiro = true;
            int tLista = tweets.size();
            int indexLista = 0;
            int indexArq = 1;
            int resto = tLista % numArq;
            numArq = tLista / numArq;
            while (indexLista < tLista) {
                if (!primeiro) {
                    indexArq++;
                    arq = new File(arqTemp.getPath().replaceAll(".txt", "") + indexArq + ".txt");
                }
                primeiro = false;
                List<Tweet> subList = tweets.subList(indexLista, indexLista + numArq <= tLista
                        ? indexLista + numArq + resto == tLista
                                ? indexLista + numArq + resto
                                : indexLista + numArq
                        : tLista);
                if (indexLista + numArq <= tLista) {
                    if (indexLista + numArq + resto == tLista) {
                        indexLista = indexLista + numArq + resto;
                    } else {
                        indexLista = indexLista + numArq;
                    }
                } else {
                    indexLista = tLista;
                }
                ArrayList<Tweet> twees = new ArrayList<>(subList);
                Fachada.getINSTANCIA().inserirTweets(arq, twees);
            }
        }
    }

}
